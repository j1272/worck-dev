/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nlet fixedDiv = document.querySelector('.sidebar');\r\nconst blackSections = Array.from( document.querySelectorAll('.footer') );\r\n\r\nwindow.addEventListener( 'scroll', ()=>{\r\n  let fixedDivRect = fixedDiv.getBoundingClientRect();\r\n  \r\n  let isIntersected = blackSections.some( blackSection => {\r\n    let blackSectionRect = blackSection.getBoundingClientRect();\r\n    \r\n    if(\r\n      fixedDivRect.top > blackSectionRect.top &&\r\n      fixedDivRect.bottom < blackSectionRect.bottom\r\n    ) return true;\r\n  });\r\n  \r\n  fixedDiv.classList.toggle( 'invertcolor', isIntersected );\r\n});\r\n\r\n\r\n\r\n\r\nfunction loaderSpinner() {\r\n    $(window).load(function() {\r\n        var loader = $('.loader');\r\n        //var loader_text = $('.loader_text');\r\n        var preloader = $('.preloader');\r\nvar wHeight = $(window).height();\r\nvar wWidth = $(window).width();\r\nvar i = 0;\r\n/*Center loader on half screen */\r\nloader.css({\r\n    top: wHeight / 2 - 2.5,\r\n    left: wWidth / 2 - 200\r\n })\r\n      \r\n  do{\r\n    loader.animate({\r\n      width: i\r\n    },10)\r\n    i+=3;\r\n  } while(i <= 400)\r\n  if(i === 402){\r\n    loader.animate({\r\n      left: 0,\r\n      width: '100%'\r\n    })\r\n    loader.animate({\r\n      top: '0',\r\n      height: '100vh'\r\n    })\r\n  }\r\n      \r\n      /* This line hide loader and show content */\r\n      setTimeout(function(){\r\n        $(\".wrapper\").fadeIn(\"slow\");\r\n    //   $('.l').fadeIn('slow', function() {\r\n    //    $('.l').css('overflow-y','scroll');\r\n    // });\r\n    // $('.wrapper').fadeIn('slow', function() {\r\n    //    $('.wrapper').css('visibility','visible');\r\n    // });\r\n        //(loader).fadeOut(\"fast\");\r\n        //(loader_text).fadeOut(\"fast\");\r\n        (preloader).fadeOut(\"fast\");\r\n        /*Set time in milisec */\r\n      },3500);\r\n    });\r\n\r\n}\r\n\r\nloaderSpinner();\r\n\r\nconst cursor = document.querySelector(\"#cursor\");\r\nconst cursorCircle = cursor.querySelector(\".cursor__circle\");\r\n\r\nconst mouse = { x: -100, y: -100 }; // mouse pointer's coordinates\r\nconst pos = { x: 0, y: 0 }; // cursor's coordinates\r\nconst speed = 0.1; // between 0 and 1\r\n\r\nconst updateCoordinates = (e) => {\r\n  mouse.x = e.clientX;\r\n  mouse.y = e.clientY;\r\n};\r\n\r\nwindow.addEventListener(\"mousemove\", updateCoordinates);\r\n\r\nfunction getAngle(diffX, diffY) {\r\n  return (Math.atan2(diffY, diffX) * 180) / Math.PI;\r\n}\r\n\r\nfunction getSqueeze(diffX, diffY) {\r\n  const distance = Math.sqrt(Math.pow(diffX, 2) + Math.pow(diffY, 2));\r\n  const maxSqueeze = 0.15;\r\n  const accelerator = 1500;\r\n  return Math.min(distance / accelerator, maxSqueeze);\r\n}\r\n\r\nconst updateCursor = () => {\r\n  const diffX = Math.round(mouse.x - pos.x);\r\n  const diffY = Math.round(mouse.y - pos.y);\r\n\r\n  pos.x += diffX * speed;\r\n  pos.y += diffY * speed;\r\n\r\n  const angle = getAngle(diffX, diffY);\r\n  const squeeze = getSqueeze(diffX, diffY);\r\n\r\n  const scale = \"scale(\" + (1 + squeeze) + \", \" + (1 - squeeze) + \")\";\r\n  const rotate = \"rotate(\" + angle + \"deg)\";\r\n  const translate = \"translate3d(\" + pos.x + \"px ,\" + pos.y + \"px, 0)\";\r\n\r\n  cursor.style.transform = translate;\r\n  cursorCircle.style.transform = rotate + scale;\r\n};\r\n\r\nfunction loop() {\r\n  updateCursor();\r\n  requestAnimationFrame(loop);\r\n}\r\n\r\nrequestAnimationFrame(loop);\r\n\r\nconst cursorModifiers = document.querySelectorAll(\"[cursor-class]\");\r\n\r\ncursorModifiers.forEach((curosrModifier) => {\r\n  curosrModifier.addEventListener(\"mouseenter\", function () {\r\n    const className = this.getAttribute(\"cursor-class\");\r\n    cursor.classList.add(className);\r\n  });\r\n\r\n  curosrModifier.addEventListener(\"mouseleave\", function () {\r\n    const className = this.getAttribute(\"cursor-class\");\r\n    cursor.classList.remove(className);\r\n  });\r\n\r\n  \r\n});\r\n\r\nconst cursorModmix = document.querySelectorAll(\"[cursor-mix]\");\r\n\r\ncursorModmix.forEach((curosrModifier) => {\r\n  curosrModifier.addEventListener(\"mouseenter\", function () {\r\n    this.getAttribute(\"cursor-mix\");\r\n    cursor.classList.add('cursor_mix');\r\n  });\r\n\r\n  curosrModifier.addEventListener(\"mouseleave\", function () {\r\n    this.getAttribute(\"cursor-mix\");\r\n    cursor.classList.remove('cursor_mix');\r\n  });\r\n});\r\n\r\n\r\n\r\n\r\nwindow.addEventListener( 'mousemove', ()=>{\r\n  let fixedDivRect = cursorCircle.getBoundingClientRect();\r\n  \r\n  let isIntersected = blackSections.some( blackSection => {\r\n    let blackSectionRect = blackSection.getBoundingClientRect();\r\n    \r\n    if(\r\n      fixedDivRect.top > blackSectionRect.top &&\r\n      fixedDivRect.bottom < blackSectionRect.bottom\r\n    ) return true;\r\n  });\r\n  \r\n  cursorCircle.classList.toggle( 'invertcolorcursor', isIntersected );\r\n});\r\n\r\nwindow.addEventListener( 'scroll', ()=>{\r\n  let fixedDivRect = cursorCircle.getBoundingClientRect();\r\n  \r\n  let isIntersected = blackSections.some( blackSection => {\r\n    let blackSectionRect = blackSection.getBoundingClientRect();\r\n    \r\n    if(\r\n      fixedDivRect.top > blackSectionRect.top &&\r\n      fixedDivRect.bottom < blackSectionRect.bottom\r\n    ) return true;\r\n  });\r\n  \r\n  cursorCircle.classList.toggle( 'invertcolorcursor', isIntersected );\r\n});\n\n//# sourceURL=webpack://gulp2022/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;